cover_range <- matrix(0, nrow = length(n), ncol = length(p))
rownames (cover_range) <- n
colnames (cover_range) <- p
row_num <- 0
for ( i in n) {
row_num <- row_num + 1
col_num <- 0
for (j in p) {
col_num <- col_num + 1
cover_proportion <- second_function(i, j, n_runs)
cover_range[row_num, col_num] <- cover_proportion
}
}
print(cover_range)
library(tidyverse)
library(nycflights13)
data("flights")
flights_sample <- flights |> filter(carrier == c("HA", "AS"))
AS_flights <- flights[flights$carrier == "AS", ]
#calculate mean and sd
AS_mean_arr_delay <- mean(AS_flights$arr_delay, na.rm = T)
AS_sd_arr_delay <- sd(AS_flights$arr_delay, na.rm = T)
z_score <- abs(qnorm(0.05/2, mean = 0, sd = 1))
AS_margin_error <- z_score*(AS_sd_arr_delay)/(sqrt(nrow(AS_flights)))
ASflights_lower_bound <- AS_mean_arr_delay - AS_margin_error
ASflights_upper_bound <- AS_mean_arr_delay + AS_margin_error
#Print the result
sprintf("The 95%% CI for the mean arr_delay for Alaska Airlines flights is: (%.4f , %.4f)", ASflights_lower_bound, ASflights_upper_bound )
HA_flights <- flights[flights$carrier == "HA" , ]
HA_mean_arr_delay <- mean(HA_flights$arr_delay, na.rm = T)
HA_sd_arr_delay <- sd(HA_flights$arr_delay, na.rm = T)
z_score <- abs(qnorm(0.05/2, mean = 0, sd = 1))
HA_margin_error <- z_score*(HA_sd_arr_delay)/(sqrt(nrow(HA_flights)))
HAflights_lower_bound <- HA_mean_arr_delay - HA_margin_error
HAflights_upper_bound <- HA_mean_arr_delay + HA_margin_error
#Print the result
sprintf("95%% confidence interval for the mean `arr_delay` for Hawaiian Airlines flights: (%.4f , %.4f)", HAflights_lower_bound, HAflights_upper_bound)
HA_flights_no_delay <- flights[flights$carrier == "HA" & flights$arr_delay > 0 ,]
sample_size <- nrow(HA_flights)
phat <- nrow(HA_flights_no_delay)/sample_size #p = x/n
z_score <- abs(qnorm(0.05/2, mean = 0, sd = 1))
HA_no_delay_margin_error <- z_score*sqrt(phat*(1-phat)/sample_size)
HAflights_no_delay_lower_bound <- phat - HA_no_delay_margin_error
HAflights_no_delay_upper_bound <- phat + HA_no_delay_margin_error
#Print the result
phat
sprintf("95%% confidence interval for the proportion of flights for which `arr_delay > 0`for Hawaiian Airlines flights:(%.4f , %.4f)",
HAflights_no_delay_lower_bound, HAflights_no_delay_upper_bound)
library(tidyverse)
AS_flights <- flights[flights$carrier == "AS" , ]
HA_flights <- flights[flights$carrier == "HA" , ]
t.test(AS_flights$arr_delay, HA_flights$arr_delay, var.equal=TRUE)
View(Join_HP_CA)
n_1 <- nrow(SFH_Price)
n_2 <- nrow(Condo_Price)
n_1 <- nrow(SFH_Price)
n_2 <- nrow(Condo_Price, na.rm - TRUE)
n_1 <- nrow(SFH_Price)
n_2 <- nrow(Condo_Price, na.rm = TRUE)
View(SFH_Price)
by_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y"))) %>%  # Extract year from Date column
group_by(Year)
View(by_year_SFH)
by_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y"))) %>%  # Extract year from Date column
group_by(Year)
by_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y"))) %>%  # Extract year from Date column
group_by(Year)
mean_by_year_SFH <- by_year_SFH |> group_by(Year) |> summarize(mean_price = mean(SFH_Price)) |> ungroup()
View(mean_by_year_SFH)
mean_by_year_SFH <- by_year_SFH |> group_by(Year) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
View(mean_by_year_SFH)
by_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#SFH
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year) |> summarize(mean_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
View(SFH_Price)
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
View(mean_by_year_SFH)
#SFH
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
by_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y"))) %>%  # Extract year from Date column
mr(SFH_mean)
rm(SFH_mean)
rm(Condo_mean)
View(mean_by_year_SFH)
View(mean_by_year_Condo)
#SFH
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
#we will use two data: mean_by_year_SFH and mean_by_year_Condo for the hypothesis testing (both n = 75)
library(stats)
result <- z.test(x = mean_by_year_SFH, y = mean_by_year_Condo, alternative = "two.sided")
#SFH
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
#we will use two data: mean_by_year_SFH and mean_by_year_Condo for the hypothesis testing (both n = 75)
library(stats)
result <- t.test(x = mean_by_year_SFH, y = mean_by_year_Condo, alternative = "two.sided")
print(result)
View(mean_by_year_Condo)
ggplot(mean_by_year_SFH, aes(x = Month)) +
geom_line(aes(y = mean_price, color = "Year"))
ggplot(mean_by_year_SFH, aes(x = 1:12)) +
geom_line(aes(y = mean_price, color = "Year"))
#SFH
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_SFH_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_Condo_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
#we will use two data: mean_by_year_SFH and mean_by_year_Condo for the hypothesis testing (both n = 75)
library(stats)
result <- t.test(x = mean_by_year_SFH, y = mean_by_year_Condo, alternative = "two.sided")
print(result)
ggplot(data = mean_by_year_SFH, aes( x = Month, y = mean_SFH_price))
View(Join_HP_CA)
library(dplyr, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(ggplot2, quietly = TRUE)
# read the Single Family House Data
SFH <- read.csv("D:/SP__24/MATH 167R/Project/167R/Single Family House.csv")
# read the Single Condo Data
Condo <- read.csv("D:/SP__24/MATH 167R/Project/167R/Condo.csv")
library(dplyr, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(ggplot2, quietly = TRUE)
# read the Single Family House Data
SFH <- read.csv("D:/SP__24/MATH 167R/Project/167R/Single Family House.csv")
# read the Single Condo Data
Condo <- read.csv("D:/SP__24/MATH 167R/Project/167R/Condo.csv")
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
library(dplyr, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(ggplot2, quietly = TRUE)
# read the Single Family House Data
SFH <- read.csv("D:/SP__24/MATH 167R/Project/167R/Single Family House.csv")
# read the Single Condo Data
Condo <- read.csv("D:/SP__24/MATH 167R/Project/167R/Condo.csv")
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
library(dplyr, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(ggplot2, quietly = TRUE)
# read the Single Family House Data
SFH <- read.csv("D:/SP__24/MATH 167R/Project/167R/Single Family House.csv")
# read the Single Condo Data
Condo <- read.csv("D:/SP__24/MATH 167R/Project/167R/Condo.csv")
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
# Find the index of the column of Jan 2018
index_Jan2018_Condo <- grep(2018, colnames(Condo))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_Condo <- Condo|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(Condo))
#col 3 = City name/Region Name, #col 6 = State Name, $col 7 = Metro; #col 8 = County
# Convert the table from wide to long format as the years are shown in columns
Condo_Price <- pivot_longer(
Temp_Condo,
cols = 5 : ncol(Temp_Condo),
names_to = "Date",
values_to = "Price")
# Format date and change column's names
Condo_Price <- Condo_Price |>
mutate(Date = as.Date(strptime(Date, format = "X%m.%d.%Y")))
names(Condo_Price) <- c("City", "State", "Metro", "County", "Date", "Condo_Price")
# Note: SFH_Price is the table including all Condo prices of the US by City from 2018 to present.
Condo_CA <- Condo_Price |>  # Condo prices in California from 2018 to present.
filter(State == "CA", na.rm = TRUE)
Join_HP_CA <- merge(SFH_CA, Condo_CA, by = c("City", "State", "Metro", "County", "Date"), all = TRUE)
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
# Convert the table from wide to long format as the years are shown in columns
SFH_Price <- pivot_longer(
Temp_SFH,
cols = 5 : ncol(Temp_SFH),
names_to = "Date",
values_to = "Price")
# Format date and change column's names
SFH_Price <- SFH_Price |>
mutate(Date = as.Date(strptime(Date, format = "X%m.%d.%Y")))
names(SFH_Price) <- c("City", "State", "Metro", "County", "Date", "SFH_Price")
# Note: SFH_Price is the table including all single family homes prices of the US by City from 2018 to present.
SFH_CA <- SFH_Price |>  # single family homes prices in California from 2018 to present.
filter(State == "CA", na.rm = TRUE)
# Find the index of the column of Jan 2018
index_Jan2018_Condo <- grep(2018, colnames(Condo))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_Condo <- Condo|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(Condo))
#col 3 = City name/Region Name, #col 6 = State Name, $col 7 = Metro; #col 8 = County
# Convert the table from wide to long format as the years are shown in columns
Condo_Price <- pivot_longer(
Temp_Condo,
cols = 5 : ncol(Temp_Condo),
names_to = "Date",
values_to = "Price")
# Format date and change column's names
Condo_Price <- Condo_Price |>
mutate(Date = as.Date(strptime(Date, format = "X%m.%d.%Y")))
names(Condo_Price) <- c("City", "State", "Metro", "County", "Date", "Condo_Price")
# Note: SFH_Price is the table including all Condo prices of the US by City from 2018 to present.
Condo_CA <- Condo_Price |>  # Condo prices in California from 2018 to present.
filter(State == "CA", na.rm = TRUE)
Join_HP_CA <- merge(SFH_CA, Condo_CA, by = c("City", "State", "Metro", "County", "Date"), all = TRUE)
# Find Median Price
Median_HP_CA <- Join_HP_CA |>
mutate(Year = format(Date, "%Y")) |>
group_by(Year) |>
summarize (Median_SFH_Price = mean(SFH_Price, na.rm = TRUE),
Median_Condo_Price = mean(Condo_Price, na.rm = TRUE))
Median_HP_CA$Year <- as.numeric(Median_HP_CA$Year) # convert Year Column to numeric
ggplot(Median_HP_CA, aes(x = Year)) +
geom_line(aes(y = Median_SFH_Price, color = "Median_SFH_Price")) +
geom_line(aes(y = Median_Condo_Price, color = "Median_Condo_Price")) +
labs(title = "House Prices in California from 2018 to Present",
x = "Year",
y = "Median Price") +
scale_color_manual(values = c("Median_SFH_Price" = "blue", "Median_Condo_Price" = "red")) +
theme_minimal()
ggplot(data = mean_by_year_SFH, aes( x = Month, y = mean_SFH_price))
#SFH
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_SFH_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_Condo_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
#we will use two data: mean_by_year_SFH and mean_by_year_Condo for the hypothesis testing (both n = 75)
library(stats)
result <- t.test(x = mean_by_year_SFH, y = mean_by_year_Condo, alternative = "two.sided")
print(result)
{r}
library(dplyr, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(ggplot2, quietly = TRUE)
# read the Single Family House Data
SFH <- read.csv("D:/SP__24/MATH 167R/Project/167R/Single Family House.csv")
# read the Single Condo Data
Condo <- read.csv("D:/SP__24/MATH 167R/Project/167R/Condo.csv")
# Find the index of the column of Jan 2018
index_Jan2018 <- grep("2018", colnames(SFH))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_SFH <- SFH|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(SFH))
# Convert the table from wide to long format as the years are shown in columns
SFH_Price <- pivot_longer(
Temp_SFH,
cols = 5 : ncol(Temp_SFH),
names_to = "Date",
values_to = "Price")
# Format date and change column's names
SFH_Price <- SFH_Price |>
mutate(Date = as.Date(strptime(Date, format = "X%m.%d.%Y")))
names(SFH_Price) <- c("City", "State", "Metro", "County", "Date", "SFH_Price")
# Note: SFH_Price is the table including all single family homes prices of the US by City from 2018 to present.
SFH_CA <- SFH_Price |>  # single family homes prices in California from 2018 to present.
filter(State == "CA", na.rm = TRUE)
# Find the index of the column of Jan 2018
index_Jan2018_Condo <- grep(2018, colnames(Condo))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_Condo <- Condo|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(Condo))
#col 3 = City name/Region Name, #col 6 = State Name, $col 7 = Metro; #col 8 = County
# Convert the table from wide to long format as the years are shown in columns
Condo_Price <- pivot_longer(
Temp_Condo,
cols = 5 : ncol(Temp_Condo),
names_to = "Date",
values_to = "Price")
# Format date and change column's names
Condo_Price <- Condo_Price |>
mutate(Date = as.Date(strptime(Date, format = "X%m.%d.%Y")))
names(Condo_Price) <- c("City", "State", "Metro", "County", "Date", "Condo_Price")
# Note: SFH_Price is the table including all Condo prices of the US by City from 2018 to present.
Condo_CA <- Condo_Price |>  # Condo prices in California from 2018 to present.
filter(State == "CA", na.rm = TRUE)
Join_HP_CA <- merge(SFH_CA, Condo_CA, by = c("City", "State", "Metro", "County", "Date"), all = TRUE)
# B1.1. Find Median Price
Median_HP_CA <- Join_HP_CA |>
mutate(Year = format(Date, "%Y")) |>
group_by(Year) |>
summarize (Median_SFH_Price = median(SFH_Price, na.rm = TRUE),
Median_Condo_Price = median(Condo_Price, na.rm = TRUE))
Median_HP_CA$Year <- as.numeric(Median_HP_CA$Year) # convert Year Column to numeric
ggplot(Median_HP_CA, aes(x = Year)) +
geom_line(aes(y = Median_SFH_Price, color = "Median_SFH_Price")) +
geom_line(aes(y = Median_Condo_Price, color = "Median_Condo_Price")) +
labs(title = "House Prices in California from 2018 to Present",
x = "Year",
y = "Mean Price") +
scale_color_manual(values = c("Median_SFH_Price" = "blue", "Median_Condo_Price" = "red")) +
scale_y_continuous(labels = scales::dollar_format(prefix = "$"), breaks = seq(0, 1000000, by = 50000)) +
theme_minimal()
# B1.2. Find Mean Price
Mean_HP_CA <- Join_HP_CA |>
mutate(Year = format(Date, "%Y")) |>
group_by(Year) |>
summarize (Mean_SFH_Price = mean(SFH_Price, na.rm = TRUE),
Mean_Condo_Price = mean(Condo_Price, na.rm = TRUE))
Mean_HP_CA$Year <- as.numeric(Mean_HP_CA$Year) # convert Year Column to numeric
ggplot(Mean_HP_CA, aes(x = Year)) +
geom_line(aes(y = Mean_SFH_Price, color = "Mean_SFH_Price")) +
geom_line(aes(y = Mean_Condo_Price, color = "Mean_Condo_Price")) +
labs(title = "House Prices in California from 2018 to Present",
x = "Year",
y = "Mean Price") +
scale_color_manual(values = c("Mean_SFH_Price" = "blue", "Mean_Condo_Price" = "red")) +
scale_y_continuous(labels = scales::dollar_format(prefix = "$"), breaks = seq(0, 1000000, by = 50000)) +
theme_minimal()
# Find Median Price based on County and sort the data by median value from high to low
#Condo
Condo_CA_County <- Condo_CA |>
mutate(Year = format(Date, "%Y")) |>
group_by(Year, County) |>
summarize (Median_Condo_CA_County = median(Condo_Price, na.rm = TRUE),
.groups = 'drop') |>
arrange(desc(Year), desc(Median_Condo_CA_County))
Condo_CA_County
Highest_Condo_Prices_byYear <- Condo_CA_County |>
group_by(Year) |>
top_n(1, Median_Condo_CA_County)
Lowest_Condo_Prices_byYear <- Condo_CA_County |>
group_by(Year) |>
top_n(-1, Median_Condo_CA_County)
print(Highest_Condo_Prices_byYear)
Lowest_Condo_Prices_byYear
#Single Family Home
SFH_CA_County <- SFH_CA |>
mutate(Year = format(Date, "%Y")) |>
group_by(Year, County) |>
summarize (Median_SFH_CA_County = median(SFH_Price, na.rm = TRUE),
.groups = 'drop') |>
arrange(desc(Year), desc(Median_SFH_CA_County))
SFH_CA_County
Highest_SFH_Prices_byYear <- SFH_CA_County |>
group_by(Year) |>
top_n(1, Median_SFH_CA_County)
Lowest_SFH_Prices_byYear <- SFH_CA_County |>
group_by(Year) |>
top_n(-1, Median_SFH_CA_County)
print(Highest_SFH_Prices_byYear)
Lowest_SFH_Prices_byYear
# plot house prices in Santa Clara County
Median_HP_SantaClara <- Join_HP_CA |>
filter(County == "Santa Clara County")|>
group_by(Date, City) |>
summarize (Median_SFH_Price_SantaClara = median(SFH_Price, na.rm = TRUE),
Median_Condo_Price_SantaClara = median(Condo_Price, na.rm = TRUE))
Median_HP_SantaClara_filtered <- na.omit(Median_HP_SantaClara)
# plot Median Single Family Home Prices in Santa Clara COunty
ggplot(Median_HP_SantaClara_filtered,
aes(x = Date, y = Median_SFH_Price_SantaClara, group = City, color = City)) +
labs(title = "Median Single Family Home Prices in Santa Clara County from 2018 to present",
x = "Year",
y = "Median Single Family Home Prices")+
geom_line(size = 1) +
scale_y_continuous(labels = scales::dollar_format(prefix = "$"), breaks = seq(0, 5000000, by = 500000)) +
theme_minimal()
# plot Median Condo Prices in Santa Clara County
ggplot(Median_HP_SantaClara_filtered,
aes(x = Date, y = Median_Condo_Price_SantaClara, group = City, color = City)) +
labs(title = "Median Single Condo Prices in Santa Clara County from 2018 to present",
x = "Year",
y = "Median Single Family Home Prices")+
geom_line(size = 1) +
scale_y_continuous(labels = scales::dollar_format(prefix = "$"), breaks = seq(0, 3000000, by = 250000)) +
theme_minimal()
#SFH
by_month_year_SFH <- SFH_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_SFH_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_Price |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_Condo_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
#we will use two data: mean_by_year_SFH and mean_by_year_Condo for the hypothesis testing (both n = 75)
library(stats)
result <- t.test(x = mean_by_year_SFH, y = mean_by_year_Condo, alternative = "two.sided")
print(result)
View(Join_HP_CA)
View(SFH_Price)
View(Condo_CA)
# Find the index of the column of Jan 2018
index_Jan2018_Condo <- grep(2018, colnames(Condo))[1] #[1] to get the first col in 2018
# Extract the data since Jan 2018 to the latest
Temp_Condo <- Condo|>
select(3, 6, 7, 8, all_of(index_Jan2018_Condo) : ncol(Condo))
#col 3 = City name/Region Name, #col 6 = State Name, $col 7 = Metro; #col 8 = County
# Convert the table from wide to long format as the years are shown in columns
Condo_Price <- pivot_longer(
Temp_Condo,
cols = 5 : ncol(Temp_Condo),
names_to = "Date",
values_to = "Price")
# Format date and change column's names
Condo_Price <- Condo_Price |>
mutate(Date = as.Date(strptime(Date, format = "X%m.%d.%Y")))
names(Condo_Price) <- c("City", "State", "Metro", "County", "Date", "Condo_Price")
# Note: SFH_Price is the table including all Condo prices of the US by City from 2018 to present.
Condo_CA <- Condo_Price |>  # Condo prices in California from 2018 to present.
filter(State == "CA", na.rm = TRUE)
#SFH
by_month_year_SFH <- SFH_CA |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_SFH_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_CA |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_Condo_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
#we will use two data: mean_by_year_SFH and mean_by_year_Condo for the hypothesis testing (both n = 75)
library(stats)
result <- t.test(x = mean_by_year_SFH, y = mean_by_year_Condo, alternative = "two.sided")
print(result)
#SFH
by_month_year_SFH <- SFH_CA |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price SFH by year
mean_by_year_SFH <- by_month_year_SFH |> group_by(Year, Month) |> summarize(mean_SFH_price = mean(SFH_Price,na.rm = TRUE)) |> ungroup()
#Condo
by_month_year_Condo <- Condo_CA |> mutate(Year = as.integer(format(as.Date(Date), "%Y")),Month = as.integer(format(as.Date(Date), "%m")))|>
group_by(Year)
#mean price Condo by year
mean_by_year_Condo <- by_month_year_Condo |> group_by(Year, Month) |> summarize(mean_Condo_price = mean(Condo_Price,na.rm = TRUE)) |> ungroup()
#we will use two data: mean_by_year_SFH and mean_by_year_Condo for the hypothesis testing (both n = 75)
library(stats)
result <- t.test(x = mean_by_year_SFH, y = mean_by_year_Condo, alternative = "two.sided")
print(result)
